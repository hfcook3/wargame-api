// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WargameApi.Data;

#nullable disable

namespace WargameApi.Migrations
{
    [DbContext(typeof(KillTeamContext))]
    partial class KillTeamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OperativeWeapon", b =>
                {
                    b.Property<int>("OperativesId")
                        .HasColumnType("integer");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("integer");

                    b.HasKey("OperativesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("OperativeWeapon");
                });

            modelBuilder.Entity("WargameApi.Models.CriticalHitRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("CriticalHitRule");
                });

            modelBuilder.Entity("WargameApi.Models.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OperativeId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OperativeId");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("WargameApi.Models.KillTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("KillTeams");
                });

            modelBuilder.Entity("WargameApi.Models.Operative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionPointLimit")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("GroupActivation")
                        .HasColumnType("integer");

                    b.Property<int?>("KillTeamId")
                        .HasColumnType("integer");

                    b.Property<int>("MovementCount")
                        .HasColumnType("integer");

                    b.Property<int>("MovementDistance")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SaveThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("Wounds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("Operatives");
                });

            modelBuilder.Entity("WargameApi.Models.OperativeAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionPointCost")
                        .HasColumnType("integer");

                    b.Property<int?>("OperativeId")
                        .HasColumnType("integer");

                    b.Property<string>("Rule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OperativeId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("WargameApi.Models.SpecialRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OperativeId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OperativeId");

                    b.HasIndex("WeaponId");

                    b.ToTable("SpecialRule");
                });

            modelBuilder.Entity("WargameApi.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Attacks")
                        .HasColumnType("integer");

                    b.Property<int>("CritDamage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NormalDamage")
                        .HasColumnType("integer");

                    b.Property<int>("SkillThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("OperativeWeapon", b =>
                {
                    b.HasOne("WargameApi.Models.Operative", null)
                        .WithMany()
                        .HasForeignKey("OperativesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WargameApi.Models.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WargameApi.Models.CriticalHitRule", b =>
                {
                    b.HasOne("WargameApi.Models.Weapon", null)
                        .WithMany("CriticalHitRules")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("WargameApi.Models.Keyword", b =>
                {
                    b.HasOne("WargameApi.Models.Operative", null)
                        .WithMany("Keywords")
                        .HasForeignKey("OperativeId");
                });

            modelBuilder.Entity("WargameApi.Models.Operative", b =>
                {
                    b.HasOne("WargameApi.Models.KillTeam", null)
                        .WithMany("Operatives")
                        .HasForeignKey("KillTeamId");
                });

            modelBuilder.Entity("WargameApi.Models.OperativeAction", b =>
                {
                    b.HasOne("WargameApi.Models.Operative", null)
                        .WithMany("SpecialActions")
                        .HasForeignKey("OperativeId");
                });

            modelBuilder.Entity("WargameApi.Models.SpecialRule", b =>
                {
                    b.HasOne("WargameApi.Models.Operative", null)
                        .WithMany("SpecialRules")
                        .HasForeignKey("OperativeId");

                    b.HasOne("WargameApi.Models.Weapon", null)
                        .WithMany("SpecialRules")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("WargameApi.Models.KillTeam", b =>
                {
                    b.Navigation("Operatives");
                });

            modelBuilder.Entity("WargameApi.Models.Operative", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("SpecialActions");

                    b.Navigation("SpecialRules");
                });

            modelBuilder.Entity("WargameApi.Models.Weapon", b =>
                {
                    b.Navigation("CriticalHitRules");

                    b.Navigation("SpecialRules");
                });
#pragma warning restore 612, 618
        }
    }
}
